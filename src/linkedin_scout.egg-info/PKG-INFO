Metadata-Version: 2.4
Name: linkedin-scout
Version: 1.0.0
Summary: AI-powered LinkedIn contact discovery tool with local models
Author-email: Christopher Morrison <chris@example.com>
License: MIT
Project-URL: Homepage, https://github.com/username/linkedin-scout
Project-URL: Repository, https://github.com/username/linkedin-scout
Project-URL: Issues, https://github.com/username/linkedin-scout/issues
Keywords: linkedin,contacts,prospecting,automation,ai,ollama
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: playwright>=1.40.0
Requires-Dist: typer[all]>=0.9.0
Requires-Dist: rich>=13.0.0
Requires-Dist: sqlalchemy>=2.0.0
Requires-Dist: alembic>=1.13.0
Requires-Dist: pydantic>=2.5.0
Requires-Dist: httpx>=0.25.0
Requires-Dist: ollama>=0.2.0
Requires-Dist: pandas>=2.1.0
Requires-Dist: openpyxl>=3.1.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: beautifulsoup4>=4.12.0
Requires-Dist: tenacity>=8.2.0
Requires-Dist: click>=8.1.0
Requires-Dist: aiosqlite>=0.19.0
Requires-Dist: asyncio-throttle>=1.0.0
Requires-Dist: fake-useragent>=1.4.0
Provides-Extra: dev
Requires-Dist: pytest>=7.4.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: pytest-cov>=4.1.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.6.0; extra == "dev"
Requires-Dist: pre-commit>=3.5.0; extra == "dev"

# LinkedIn Scout üïµÔ∏è

An AI-powered LinkedIn contact discovery tool that uses local models and browser automation to find prospects based on your company lists and search criteria.

## Architecture

**Python + Local AI + Browser Automation:**
- **Local AI Models**: Uses Ollama/Llama for intelligent search refinement and data processing
- **Browser Automation**: Playwright for LinkedIn interaction with your own session
- **Local Storage**: SQLite for data persistence and privacy
- **CLI Interface**: Rich command-line interface with Typer
- **Modular Design**: Extensible architecture for different search strategies

## Key Features

- ü§ñ **AI-Enhanced Search**: Local LLM refines search queries and extracts contact information
- üè¢ **Company Management**: Track target companies and industries
- üîç **Smart Filtering**: AI-powered relevance scoring and duplicate detection
- üìä **Export Options**: CSV, JSON, Excel with customizable fields
- üîí **Privacy First**: All data and AI processing stays local
- üöÄ **Scalable**: Optional cloud scaling via Browserbase for large searches

## Getting Started

```bash
# Install dependencies
pip install -e .

# Initialize database
linkedin-scout init

# Add target companies
linkedin-scout companies add "OpenAI" "Anthropic" "Google"

# Set up search criteria
linkedin-scout criteria create "ai-engineers" \
    --titles "AI Engineer,ML Engineer,Data Scientist" \
    --locations "San Francisco,Seattle" \
    --seniority "Senior,Staff"

# Run discovery with AI assistance
linkedin-scout discover --criteria "ai-engineers" --limit 50

# Export results
linkedin-scout export --format csv --output contacts.csv
```

## Architecture Components

### Core Modules
- **`agents/`**: Local AI agents for search planning and data extraction
- **`browser/`**: Playwright automation for LinkedIn interaction
- **`database/`**: SQLite models and migrations
- **`search/`**: Search strategies and result processing
- **`export/`**: Multiple export formats and integrations
- **`cli/`**: Rich command-line interface

### AI Integration
- **Local Models**: Ollama integration for privacy-focused AI
- **Search Agent**: Refines queries and suggests improvements
- **Extraction Agent**: Cleans and structures contact data
- **Relevance Agent**: Scores contacts for quality filtering

## Local AI Setup

```bash
# Install Ollama
curl https://ollama.ai/install.sh | sh

# Pull recommended model
ollama pull llama3.2:3b

# Configure LinkedIn Scout
linkedin-scout config set ai.model "llama3.2:3b"
linkedin-scout config set ai.endpoint "http://localhost:11434"
```
